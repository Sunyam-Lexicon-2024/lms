// <auto-generated />
using System;
using Lms.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Data.Migrations
{
    [DbContext(typeof(LmsDbContext))]
    partial class LmsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.Core.Entities.CourseElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ElementType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("CourseElements", (string)null);

                    b.HasDiscriminator<string>("ElementType").HasValue("CourseElement");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LMS.Core.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("LMS.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LMS.Core.Entities.Activity", b =>
                {
                    b.HasBaseType("LMS.Core.Entities.CourseElement");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ModuleId");

                    b.HasDiscriminator().HasValue("Activity");
                });

            modelBuilder.Entity("LMS.Core.Entities.Course", b =>
                {
                    b.HasBaseType("LMS.Core.Entities.CourseElement");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("Course");
                });

            modelBuilder.Entity("LMS.Core.Entities.Module", b =>
                {
                    b.HasBaseType("LMS.Core.Entities.CourseElement");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.HasIndex("CourseId");

                    b.HasDiscriminator().HasValue("Module");
                });

            modelBuilder.Entity("LMS.Core.Entities.CourseElement", b =>
                {
                    b.HasOne("LMS.Core.Entities.CourseElement", "Parent")
                        .WithMany("ChildElements")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LMS.Core.Entities.Document", b =>
                {
                    b.HasOne("LMS.Core.Entities.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMS.Core.Entities.Activity", b =>
                {
                    b.HasOne("LMS.Core.Entities.Module", null)
                        .WithMany("Activities")
                        .HasForeignKey("ModuleId");
                });

            modelBuilder.Entity("LMS.Core.Entities.Course", b =>
                {
                    b.HasOne("LMS.Core.Entities.User", null)
                        .WithMany("Courses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LMS.Core.Entities.Module", b =>
                {
                    b.HasOne("LMS.Core.Entities.Course", null)
                        .WithMany("Modules")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("LMS.Core.Entities.CourseElement", b =>
                {
                    b.Navigation("ChildElements");
                });

            modelBuilder.Entity("LMS.Core.Entities.User", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("LMS.Core.Entities.Course", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("LMS.Core.Entities.Module", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
