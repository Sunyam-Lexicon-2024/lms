@page "/Teacher/"
@inject UserManager<User> UserManager

<PageTitle>Teacher Home</PageTitle>

<h1>Teacher</h1>

[Teacher Courses]

<Button Color="ButtonColor.Primary" TooltipTitle="Create a new activity"
    @onclick="ShowCreateActivityFormModal">Placeholder Create Activity Button</Button>

<Modal @ref="_createActivityFormModal" Title="Create New Activity"
    HeaderCssClass="d-flex flex-row justify-content-between">
    <BodyTemplate>
        <CreateActivityForm />
    </BodyTemplate>
</Modal>




<TeacherCourses UserId="@_userId"/>


<UserDocuments UserId="@_userId" />

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? _authenticationState { get; set; }

    private string? _userId;


    private Modal _createActivityFormModal = default!;

    private async Task ShowCreateActivityFormModal()
    {
        await _createActivityFormModal.ShowAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        if (_authenticationState is not null)
        {
            var authState = await _authenticationState;
            var user = authState.User;
            var targetUser = await UserManager.GetUserAsync(user);

            if (targetUser is Teacher Teacher)
            {
                _userId = Teacher.Id;
            }
        }
    }
}
